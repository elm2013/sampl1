# Docker Compose Configuration
# visit https://docs.docker.com/compose/

version: "3.8"

services:
  # app service for your backend
  # app:
  #   container_name: megashid
  #   restart: always
  #   build:
  #     context: ./
  #     dockerfile: Dockerfile
  #   environment:
  #     DB_CONN: "mongodb://admin:f3MdBEcz@mongodb:27017/megashid?authSource=admin"
  #   env_file:
  #     - .env
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - mongodb
  #     - influxdb
  #     - kafka

  influxdb:
    image: influxdb:2.6-alpine

    volumes:
      # Mount for influxdb data directory and configuration
      - influxdbv2:/var/lib/influxdb2:rw

    ports:
      - "8086:8086"

  # start the mongodb service as container
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: f3MdBEcz

    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

    command: [--auth]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "message-Megashid:1:1"

volumes:
  influxdbv2:
  mongodb-data:
